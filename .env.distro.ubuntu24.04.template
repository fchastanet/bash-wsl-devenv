#!/bin/bash
# shellcheck disable=SC2034

# -----------------------------------------------------------------------------
# General information
# -----------------------------------------------------------------------------

# wsl username with default password wsl
USERNAME="wsl"
USER_ID=1000

# the user group to use on remote distro
USERGROUP="wsl"
USERGROUP_ID=1000

HOME="/home/wsl"

WINDOWS_USERNAME="fchastanet"

# -----------------------------------------------------------------------------
# Git & SSH information
# -----------------------------------------------------------------------------

# if 1, it indicates you accept that your git key will be loaded.
# if 0, configurations that need to be authenticated will be skipped.
# Distro mode: in any case, your key is not copied.
AUTHORIZE_SSH_KEY_USAGE=1

# your login to connect to ssh servers if any
SSH_LOGIN=""

# your git full name 'FirstName LastName'
GIT_USERNAME=""

# email used for git 'ldap@domain.com'
GIT_USER_MAIL=""

# default git merge tool to use
GIT_MERGE_TOOL="vscode"

# -----------------------------------------------------------------------------
# AWS information
# -----------------------------------------------------------------------------

# email used to connect to aws
AWS_USER_MAIL="fchastanet@gmail.com"

# app id to connect to aws account
AWS_APP_ID=""

AWS_PROFILE=""
AWS_DEFAULT_REGION=""
AWS_TEST_SECRET_ID=""
AWS_DEFAULT_DOCKER_REGISTRY_ID=""

# -----------------------------------------------------------------------------
# K8S information
# -----------------------------------------------------------------------------

# KubeDefaultConfig ~/.kube/config generation
# aws region of the cluster (Eg: us-east-1)
KUBE_CONFIG_REGION_CODE=

# aws arn of the cluster.
# Eg: arn:aws:ecs:region:aws_account_id:cluster/MyCluster
KUBE_CONFIG_CLUSTER_ARN=

# -----------------------------------------------------------------------------
# Directories
# -----------------------------------------------------------------------------

# overridden conf directory that will be used to override
# the default configuration that are embedded in binaries
CONF_OVERRIDE_DIR="${BASH_DEV_ENV_ROOT_DIR}/conf.override"

# where to install bash-tools, ...
# shellcheck disable=SC2153
PROJECTS_DIR="${HOME}/projects"

# where overridden config files will be backed up
BACKUP_DIR="${BASH_DEV_ENV_ROOT_DIR}/backup"
# backup files/dirs before installing new file (usually 1, but 0 if using distro)
BACKUP_BEFORE_INSTALL=0

# logs directory
LOGS_DIR="${BASH_DEV_ENV_ROOT_DIR}/logs"

# installScripts root dir
INSTALL_SCRIPTS_ROOT_DIR="${BASH_DEV_ENV_ROOT_DIR}"

# -----------------------------------------------------------------------------
# Installation configuration
# -----------------------------------------------------------------------------

# Configuration files are overwritten even if exists
# !!!! First time initialization: let this value to 1 !!!!
# Value 0:
# - If target configuration file exists, displays a message and do not overwrite the file
# - If target configuration file doesn't exist, installs the file
# Value 1
# - install or overwrite the file without checking existence
OVERWRITE_CONFIG_FILES=1

# Windows files can be overridden if 1
# if 0
# - skip changes to %USERPROFILE%/.wslconfig
# - skip copying fonts
CHANGE_WINDOWS_FILES=1

# Indicate that install script can warn you using speaker when your input is needed
CAN_TALK_DURING_INSTALLATION=1

# if 0 install script will skip all interactive activity (saml2aws, ...),
# so dependent installation will be skipped as well
INSTALL_INTERACTIVE=0

# display elapsed time since last log
DISPLAY_DURATION=1

# 0   => no upgrade at all
# lts => UPGRADE to latest ubuntu lts version
# dev => UPGRADE to latest ubuntu dev version
# Use if you know what you are doing,
# could cause some packages to not being available yet
UPGRADE_UBUNTU_VERSION=0

# -----------------------------------------------------------------------------
# Profile configuration
# -----------------------------------------------------------------------------

# Choose your preferred shell
# possible choices: ShellBash (Legacy experience), ShellZsh (Recommended experience)
PREFERRED_SHELL="ShellZsh"

# Zsh theme to use
# possible choices: powerlevel10k/powerlevel10k, sindresorhus/pure, starship/starship
ZSH_PREFERRED_THEME="powerlevel10k/powerlevel10k"

# Display Fortune tooltip at bash/zsh session open
SHOW_FORTUNES=1

# Display MOTD at bash/zsh session open
SHOW_MOTD=1

# -----------------------------------------------------------------------------
# WSLCONFIG
# These parameters automatically configure %USERPROFILE%/.wslconfig file.
# @see https://docs.microsoft.com/en-us/windows/wsl/wsl-config
# -----------------------------------------------------------------------------

# Recommended 50% of total memory
WSLCONFIG_MAX_MEMORY=8GB

# personally I prefer run out of memory instead of beginning swapping
# So I know immediately if some processes have to be stopped
WSLCONFIG_SWAP=0

# if 1 it will compute automatically the max vhd size
# default (1/3 of disk size, min 150GB)
# if 0 it will use wsl default value (1TB)
WSLCONFIG_COMPUTE_MAX_VHD_SIZE=1

# -----------------------------------------------------------------------------
# Hacks
# on some configurations we have to force path of some windows commands
# -----------------------------------------------------------------------------

#POWERSHELL_BIN=/mnt/c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe
#IPCONFIG_BIN=/mnt/c/Windows/system32/ipconfig.exe
#WSL_EXE_BIN=/mnt/c/Windows/system32/wsl.exe

# -----------------------------------------------------------------------------
# General distribution information
# -----------------------------------------------------------------------------

# hostname of the distro
DISTRO_HOSTNAME="wslHost"

# -----------------------------------------------------------------------------
# Distro Configuration
# Only necessary when using distro script to create/update a wsl distribution.
# -----------------------------------------------------------------------------

# version of distribution
DISTRO_VERSION=1.0

# The name of the distro displayed in `wsl -l -v` command
DISTRO_NAME="UbuntuTest"

# where to download the distribution
DISTRO_URL="https://cloud-images.ubuntu.com/wsl/noble/20250130/ubuntu-noble-wsl-amd64-ubuntu.rootfs.tar.gz"

# parameters to pass to install command
# -p <profile>        - Profile to use with install command
# --skip-dependencies - skip dependencies
DISTRO_INSTALL_OPTIONS=(-p default)

# The path where bash-dev-env project will be copied into target distro
DISTRO_BASH_DEV_ENV_TARGET_DIR="${BASH_DEV_ENV_ROOT_DIR}"

# Where downloaded distro images will be stored
DISTRO_IMAGE_TARGET_DIR="${HOME}/downloadedDistros"
